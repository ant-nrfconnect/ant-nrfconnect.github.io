:orphan:

.. title:: ANT_NP_HOST_SYS_INIT

.. option:: CONFIG_ANT_NP_HOST_SYS_INIT

*Initialize ANT network processor host during SYS_INIT*

Type: ``bool``

Help
====

In most cases, the network processor host module handles initialization using
the SYS_INIT macro. This Kconfig is provided to bypass initialization and expose
the ant_rpc_app_init function for applications that have unique initialization
requirements. When enabled, it becomes the responisbility of the application to
ensure that ant_init() is called on the application core prior to any ANT API usage
so RPC messages from the network core can be processed.

Direct dependencies
===================

\ :option:`ANT_NP_HOST <CONFIG_ANT_NP_HOST>` && \ :option:`ANT <CONFIG_ANT>`

*(Includes any dependencies from ifs and menus.)*

Default
=======

- y

Kconfig definition
==================

.. highlight:: kconfig

At ``np/Kconfig:43``

Included via ``Kconfig:50``

Menu path: (Top) → ANT Wireless → ANT Wireless

.. parsed-literal::

    config ANT_NP_HOST_SYS_INIT
    	bool "Initialize ANT network processor host during SYS_INIT"
    	default y
    	depends on \ :option:`ANT_NP_HOST <CONFIG_ANT_NP_HOST>` && \ :option:`ANT <CONFIG_ANT>`
    	help
    	  In most cases, the network processor host module handles initialization using
    	  the SYS_INIT macro. This Kconfig is provided to bypass initialization and expose
    	  the ant_rpc_app_init function for applications that have unique initialization
    	  requirements. When enabled, it becomes the responisbility of the application to
    	  ensure that ant_init() is called on the application core prior to any ANT API usage
    	  so RPC messages from the network core can be processed.

*(The 'depends on' condition includes propagated dependencies from ifs and menus.)*